{"version":3,"file":"static/js/168.122bf1be.chunk.js","mappings":"+PACA,EAAuB,sBAAvB,EAAqD,uBAArD,EAAmF,sB,SC6CnF,MAxCA,WACE,OAA2BA,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA6BF,EAAAA,EAAAA,UAAS,MAAtC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA6BJ,EAAAA,EAAAA,WAAS,GAAtC,eAAOK,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAI,CACN,IAAMG,EAAK,mCAAG,oGAEVJ,GAAU,GAFA,UAGSK,EAAAA,EAAAA,IAAoBC,OAAOL,IAHpC,OAGJM,EAHI,OAIVX,EAAQW,EAAKA,KAAKC,SAJR,gDAMVV,EAAS,KAASW,SANR,yBAQVT,GAAU,GARA,4EAAH,qDAWXI,GACD,CACF,GAAE,CAACH,EAAIJ,IAER,IAAMa,EAAUf,EAAQgB,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC1B,2BACE,eAAIC,UAAWC,EAAf,SAA8BH,KAC9B,cAAGE,UAAWC,EAAd,SAA4BF,MAFrBZ,EADiB,IAO5B,OACE,+BACE,gBAAIa,UAAWC,EAAf,UACGhB,IAAW,SAACiB,EAAA,EAAD,IACVjB,GAA8B,IAAnBJ,EAAQsB,OAA8BP,EAAf,iBAI3C,C,oKC1CDQ,EAAAA,EAAAA,SAAAA,QAAA,gCACA,IAAMC,EAAU,mCAEHC,EAAgB,SAAAC,GAAM,OACjCH,EAAAA,EAAAA,IAAA,gCAC2BC,EAD3B,kBAC4CE,EAD5C,+BADiC,EAKtBC,EAAiB,SAAArB,GAAE,OAC9BiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,oBAAkCkB,EAAlC,mBAD8B,EAGnBI,EAAqB,kBAChCL,EAAAA,EAAAA,IAAA,sCAAyCC,GADT,EAGrBK,EAAmB,SAAAvB,GAAE,OAChCiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,4BAA0CkB,EAA1C,mBADgC,EAGrBd,EAAsB,SAAAJ,GAAE,OACnCiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,4BAA0CkB,EAA1C,0BADmC,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","shared/services/Film-Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"title\":\"Reviews_title__t265C\",\"text\":\"Reviews_text__EqLvx\"};","import { searchFilmByReviews } from 'shared/services/Film-Api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport styles from './Reviews.module.css';\n\nfunction Reviews() {\n  const [reviews, setCast] = useState([]);\n  const [response, setError] = useState(null);\n  const [loading, setLoader] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      const fetch = async () => {\n        try {\n          setLoader(true);\n          const data = await searchFilmByReviews(Number(id));\n          setCast(data.data.results);\n        } catch (response) {\n          setError(response.message);\n        } finally {\n          setLoader(false);\n        }\n      };\n      fetch();\n    }\n  }, [id, response]);\n\n  const element = reviews.map(({ id, author, content }) => (\n    <li key={id}>\n      <h3 className={styles.title}>{author}</h3>\n      <p className={styles.text}>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul className={styles.list}>\n        {loading && <Loader />}\n        {!loading && reviews.length === 0 ? 'No reviews' : element}\n      </ul>\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst API_KEY = '6c57fb02719926393bb8c06aa147886f';\n\nexport const searchFilmApi = search =>\n  axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${search}&page=1&include_adult=false`\n  );\n\nexport const searchFilmByID = id =>\n  axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n\nexport const searchFilmTrending = () =>\n  axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\nexport const searchFilmByCast = id =>\n  axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n\nexport const searchFilmByReviews = id =>\n  axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n"],"names":["useState","reviews","setCast","response","setError","loading","setLoader","id","useParams","useEffect","fetch","searchFilmByReviews","Number","data","results","message","element","map","author","content","className","styles","Loader","length","axios","API_KEY","searchFilmApi","search","searchFilmByID","searchFilmTrending","searchFilmByCast"],"sourceRoot":""}