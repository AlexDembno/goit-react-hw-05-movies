{"version":3,"file":"static/js/135.6aab7882.chunk.js","mappings":"8PACA,EAA0B,8BAA1B,EAA8D,0BAA9D,EAAgG,4BAAhG,EAAmI,2BAAnI,EAAoK,0BAApK,EAAqM,2BAArM,EAAuO,2BAAvO,EAAgR,kCAAhR,EAAiU,mC,SC6EjU,MAlEA,WAAyB,IAAD,EACtB,GAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA6BJ,EAAAA,EAAAA,UAAS,MAAtC,eAAOK,EAAP,KAAiBC,EAAjB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,IAiBrC,OAfAG,EAAAA,EAAAA,YAAU,WACR,GAAIP,EAAI,CACN,IAAMQ,EAAK,mCAAG,8GAESC,EAAAA,EAAAA,IAAeC,OAAOV,IAF/B,OAEJW,EAFI,OAGVhB,EAAQgB,EAAKA,MACbd,EAAUc,EAAKA,KAAKf,QAJV,gDAMVG,EAAS,KAASa,SANR,yDAAH,qDASXJ,GACD,CACF,GAAE,CAACR,EAAIF,KAGN,+BACE,iBAAKe,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAYC,QAAS,kBAAMb,EAASE,EAAf,EAAxC,sBAIA,iBAAKS,UAAWC,EAAhB,UACGpB,EAAKsB,cACJ,gBACEH,UAAWC,EACXG,IAAG,0CAAqCvB,EAAKsB,aAC7CE,IAAKxB,EAAKyB,MACVC,MAAM,SAIV,iBAAKP,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA8BpB,EAAKyB,SACnC,cAAGN,UAAWC,EAAd,SAA4BpB,EAAK2B,YACjC,cAAGR,UAAWC,EAAd,SAA4BpB,EAAK4B,cACjC,cAAGT,UAAWC,EAAd,sBACA,wBACGlB,EAAO2B,KAAI,gBAAGvB,EAAH,EAAGA,GAAIwB,EAAP,EAAOA,KAAP,OACV,eAAIX,UAAWC,EAAf,UACE,cAAGD,UAAWC,EAAd,SAA4BU,KADGxB,EADvB,aAQlB,SAAC,KAAD,CAASa,UAAWC,EAAaR,MAAO,CAAEF,KAAAA,GAAQqB,GAAG,OAArD,mBAGA,SAAC,KAAD,CAASZ,UAAWC,EAAaR,MAAO,CAAEF,KAAAA,GAAQqB,GAAG,UAArD,sBAGA,SAAC,KAAD,QAIP,C,oKC3EDC,EAAAA,EAAAA,SAAAA,QAAA,gCACA,IAAMC,EAAU,mCAEHC,EAAgB,SAAAC,GAAM,OACjCH,EAAAA,EAAAA,IAAA,gCAC2BC,EAD3B,kBAC4CE,EAD5C,+BADiC,EAKtBpB,EAAiB,SAAAT,GAAE,OAC9B0B,EAAAA,EAAAA,IAAA,iBAAoB1B,EAApB,oBAAkC2B,EAAlC,mBAD8B,EAGnBG,EAAqB,kBAChCJ,EAAAA,EAAAA,IAAA,sCAAyCC,GADT,EAGrBI,EAAmB,SAAA/B,GAAE,OAChC0B,EAAAA,EAAAA,IAAA,iBAAoB1B,EAApB,4BAA0C2B,EAA1C,mBADgC,EAGrBK,EAAsB,SAAAhC,GAAE,OACnC0B,EAAAA,EAAAA,IAAA,iBAAoB1B,EAApB,4BAA0C2B,EAA1C,0BADmC,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","shared/services/Film-Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"btn\":\"MovieDetails_btn__7L5IF\",\"title\":\"MovieDetails_title__cUGs9\",\"text\":\"MovieDetails_text__RHcc4\",\"img\":\"MovieDetails_img__uOAom\",\"list\":\"MovieDetails_list__dbNMP\",\"link\":\"MovieDetails_link__U+v+7\",\"wrapper_img\":\"MovieDetails_wrapper_img__CAo9V\",\"wrapper_text\":\"MovieDetails_wrapper_text__7gv05\"};","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { searchFilmByID } from 'shared/services/Film-Api';\n\nimport styles from './MovieDetails.module.css';\n\nfunction MovieDetails() {\n  const [post, setPost] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [response, setError] = useState(null);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    if (id) {\n      const fetch = async () => {\n        try {\n          const data = await searchFilmByID(Number(id));\n          setPost(data.data);\n          setGenres(data.data.genres);\n        } catch (response) {\n          setError(response.message);\n        }\n      };\n      fetch();\n    }\n  }, [id, response]);\n\n  return (\n    <>\n      <div className={styles.wrapper}>\n        <button className={styles.btn} onClick={() => navigate(from)}>\n          Go back\n        </button>\n\n        <div className={styles.wrapper_img}>\n          {post.poster_path && (\n            <img\n              className={styles.img}\n              src={`https://image.tmdb.org/t/p/w500/${post.poster_path}`}\n              alt={post.title}\n              width=\"200\"\n            />\n          )}\n\n          <div className={styles.wrapper_text}>\n            <h2 className={styles.title}>{post.title}</h2>\n            <p className={styles.text}>{post.overview}</p>\n            <p className={styles.text}>{post.popularity}</p>\n            <p className={styles.title}>Genres:</p>\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li className={styles.list} key={id}>\n                  <p className={styles.text}>{name}</p>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <NavLink className={styles.link} state={{ from }} to=\"cast\">\n          Cast\n        </NavLink>\n        <NavLink className={styles.link} state={{ from }} to=\"reviews\">\n          Reviews\n        </NavLink>\n        <Outlet />\n      </div>\n    </>\n  );\n}\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst API_KEY = '6c57fb02719926393bb8c06aa147886f';\n\nexport const searchFilmApi = search =>\n  axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${search}&page=1&include_adult=false`\n  );\n\nexport const searchFilmByID = id =>\n  axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n\nexport const searchFilmTrending = () =>\n  axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\nexport const searchFilmByCast = id =>\n  axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n\nexport const searchFilmByReviews = id =>\n  axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n"],"names":["useState","post","setPost","genres","setGenres","response","setError","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetch","searchFilmByID","Number","data","message","className","styles","onClick","poster_path","src","alt","title","width","overview","popularity","map","name","to","axios","API_KEY","searchFilmApi","search","searchFilmTrending","searchFilmByCast","searchFilmByReviews"],"sourceRoot":""}